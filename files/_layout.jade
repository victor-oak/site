doctype
html(lang="pt-br")
  != partial("_partials/head")
  body(class="page-home")
    != yield

    script(src="https://cdn.jsdelivr.net/npm/clipboard@2.0.6/dist/clipboard.min.js" defer)

    script. 
      document.addEventListener("DOMContentLoaded", function(event) {
        let el = document.querySelector(".email");
        el.addEventListener("click", function(event) {
                event.preventDefault();
            });
        var clipboard = new ClipboardJS(el);

        clipboard.on('success', function(e) {
          tooltip = document.querySelector(".email .tooltip");
          tooltip.textContent="Copiado!";
          el.addEventListener("mouseleave", function( event ) {
            tooltip.textContent="Clique para copiar";
          })
          
        });

        clipboard.on('error', function(e) {
          console.log(e);
        });

        //drawing
        const container = document.querySelector( '.profile' );
        const paintCanvas = document.querySelector( '.js-paint' );

        paintCanvas.width = container.clientWidth;
        paintCanvas.height = container.clientHeight;

        const context = paintCanvas.getContext( '2d' );
        context.lineCap = 'round';
        context.strokeStyle = "#FAFFBE"; 
        context.lineWidth = 20;

        

        let x = 0, y = 0;
        let isMouseDown = false;

        const stopDrawing = () => { isMouseDown = false; }
        const startDrawing = event => {
            isMouseDown = true;   
          [x, y] = [event.offsetX, event.offsetY];  
        }
        const drawLine = event => {
            if ( isMouseDown ) {
                const newX = event.offsetX;
                const newY = event.offsetY;
                context.beginPath();
                context.moveTo( x, y );
                context.lineTo( newX, newY );
                context.stroke();
                //[x, y] = [newX, newY];
                x = newX;
                y = newY;
            }
        }

        paintCanvas.addEventListener( 'mousedown', startDrawing );
        paintCanvas.addEventListener( 'mousemove', drawLine );
        paintCanvas.addEventListener( 'mouseup', stopDrawing );
        paintCanvas.addEventListener( 'mouseout', stopDrawing );

      });